/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: proto/merkle_patricia_trie.proto */

#ifndef PROTOBUF_C_proto_2fmerkle_5fpatricia_5ftrie_2eproto__INCLUDED
#define PROTOBUF_C_proto_2fmerkle_5fpatricia_5ftrie_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct MerklePatriciaTrie__MPTNode MerklePatriciaTrie__MPTNode;
typedef struct MerklePatriciaTrie__MPTFullNode MerklePatriciaTrie__MPTFullNode;
typedef struct MerklePatriciaTrie__MPTShortNode MerklePatriciaTrie__MPTShortNode;


/* --- enums --- */

typedef enum _MerklePatriciaTrie__MPTNODETYPE {
  MERKLE_PATRICIA_TRIE__MPTNODE__TYPE__FULL = 0,
  MERKLE_PATRICIA_TRIE__MPTNODE__TYPE__SHORT = 1,
  MERKLE_PATRICIA_TRIE__MPTNODE__TYPE__VALUE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MERKLE_PATRICIA_TRIE__MPTNODE__TYPE)
} MerklePatriciaTrie__MPTNODETYPE;

/* --- messages --- */

struct  MerklePatriciaTrie__MPTNode
{
  ProtobufCMessage base;
  MerklePatriciaTrie__MPTNODETYPE type;
  ProtobufCBinaryData data;
};
#define MERKLE_PATRICIA_TRIE__MPTNODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&merkle_patricia_trie__mptnode__descriptor) \
, MERKLE_PATRICIA_TRIE__MPTNODE__TYPE__FULL, {0,NULL} }


struct  MerklePatriciaTrie__MPTFullNode
{
  ProtobufCMessage base;
  /*
   * 16 element of 32 bytes hash
   */
  size_t n_nodes;
  ProtobufCBinaryData *nodes;
  ProtobufCBinaryData value;
};
#define MERKLE_PATRICIA_TRIE__MPTFULL_NODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&merkle_patricia_trie__mptfull_node__descriptor) \
, 0,NULL, {0,NULL} }


struct  MerklePatriciaTrie__MPTShortNode
{
  ProtobufCMessage base;
  ProtobufCBinaryData key;
  ProtobufCBinaryData value;
};
#define MERKLE_PATRICIA_TRIE__MPTSHORT_NODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&merkle_patricia_trie__mptshort_node__descriptor) \
, {0,NULL}, {0,NULL} }


/* MerklePatriciaTrie__MPTNode methods */
void   merkle_patricia_trie__mptnode__init
                     (MerklePatriciaTrie__MPTNode         *message);
size_t merkle_patricia_trie__mptnode__get_packed_size
                     (const MerklePatriciaTrie__MPTNode   *message);
size_t merkle_patricia_trie__mptnode__pack
                     (const MerklePatriciaTrie__MPTNode   *message,
                      uint8_t             *out);
size_t merkle_patricia_trie__mptnode__pack_to_buffer
                     (const MerklePatriciaTrie__MPTNode   *message,
                      ProtobufCBuffer     *buffer);
MerklePatriciaTrie__MPTNode *
       merkle_patricia_trie__mptnode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   merkle_patricia_trie__mptnode__free_unpacked
                     (MerklePatriciaTrie__MPTNode *message,
                      ProtobufCAllocator *allocator);
/* MerklePatriciaTrie__MPTFullNode methods */
void   merkle_patricia_trie__mptfull_node__init
                     (MerklePatriciaTrie__MPTFullNode         *message);
size_t merkle_patricia_trie__mptfull_node__get_packed_size
                     (const MerklePatriciaTrie__MPTFullNode   *message);
size_t merkle_patricia_trie__mptfull_node__pack
                     (const MerklePatriciaTrie__MPTFullNode   *message,
                      uint8_t             *out);
size_t merkle_patricia_trie__mptfull_node__pack_to_buffer
                     (const MerklePatriciaTrie__MPTFullNode   *message,
                      ProtobufCBuffer     *buffer);
MerklePatriciaTrie__MPTFullNode *
       merkle_patricia_trie__mptfull_node__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   merkle_patricia_trie__mptfull_node__free_unpacked
                     (MerklePatriciaTrie__MPTFullNode *message,
                      ProtobufCAllocator *allocator);
/* MerklePatriciaTrie__MPTShortNode methods */
void   merkle_patricia_trie__mptshort_node__init
                     (MerklePatriciaTrie__MPTShortNode         *message);
size_t merkle_patricia_trie__mptshort_node__get_packed_size
                     (const MerklePatriciaTrie__MPTShortNode   *message);
size_t merkle_patricia_trie__mptshort_node__pack
                     (const MerklePatriciaTrie__MPTShortNode   *message,
                      uint8_t             *out);
size_t merkle_patricia_trie__mptshort_node__pack_to_buffer
                     (const MerklePatriciaTrie__MPTShortNode   *message,
                      ProtobufCBuffer     *buffer);
MerklePatriciaTrie__MPTShortNode *
       merkle_patricia_trie__mptshort_node__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   merkle_patricia_trie__mptshort_node__free_unpacked
                     (MerklePatriciaTrie__MPTShortNode *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MerklePatriciaTrie__MPTNode_Closure)
                 (const MerklePatriciaTrie__MPTNode *message,
                  void *closure_data);
typedef void (*MerklePatriciaTrie__MPTFullNode_Closure)
                 (const MerklePatriciaTrie__MPTFullNode *message,
                  void *closure_data);
typedef void (*MerklePatriciaTrie__MPTShortNode_Closure)
                 (const MerklePatriciaTrie__MPTShortNode *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    merkle_patricia_trie__mptnode__type__descriptor;
extern const ProtobufCMessageDescriptor merkle_patricia_trie__mptnode__descriptor;
extern const ProtobufCMessageDescriptor merkle_patricia_trie__mptfull_node__descriptor;
extern const ProtobufCMessageDescriptor merkle_patricia_trie__mptshort_node__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_proto_2fmerkle_5fpatricia_5ftrie_2eproto__INCLUDED */
